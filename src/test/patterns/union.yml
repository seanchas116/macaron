- title: union type OK
  src: |
    interface Foo {
      foo(x number, y number) number
      baz(x string) number
    }
    interface Bar {
      foo(x number, y number) number
      bar(x string, y string) number
    }
    class Hoge {
      foo(x number, y number) {
        x * y
      }
    }
    type FooBar = Foo | Bar
    let foobar FooBar = new Hoge()
    foobar.foo(100, 200)
  expected: 20000

- title: union type NG
  src: |
    interface Foo {
      foo(x number, y number) number
      baz(x string) number
    }
    interface Bar {
      foo(x number, y number) number
      bar(x string, y string) number
    }
    class Hoge {
      fooo(x number, y number) {
        x * y
      }
    }
    type FooBar = Foo | Bar
    let foobar FooBar = new Hoge()
  error: don't have member

- title: intersection type OK
  src: |
    interface Foo {
      foo(x number, y number) number
    }
    interface Bar {
      bar(x number, y number, z number) number
    }
    class Hoge {
      foo(x number, y number) {
        x * y
      }
      bar(x number, y number, z number) {
        x * y * z
      }
    }
    type FooBar = Foo & Bar
    let foobar FooBar = new Hoge()
    foobar.foo(100, 200) + foobar.bar(2,3,4)
  expected: 20024

- title: intersection type NG
  src: |
    interface Foo {
      foo(x number, y number) number
    }
    interface Bar {
      bar(x number, y number, z number) number
    }
    class Hoge {
      foo(x number, y number) {
        x * y
      }
      barr(x number, y number, z number) {
        x * y * z
      }
    }
    type FooBar = Foo & Bar
    let foobar FooBar = new Hoge()
  error: don't have member
